// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CnnKernel_CnnKernel_YourCode_Pipeline_VITIS_LOOP_125_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp,
        data_V,
        weight_V_0_0_address0,
        weight_V_0_0_ce0,
        weight_V_0_0_we0,
        weight_V_0_0_d0,
        weight_V_0_1_address0,
        weight_V_0_1_ce0,
        weight_V_0_1_we0,
        weight_V_0_1_d0,
        weight_V_0_2_address0,
        weight_V_0_2_ce0,
        weight_V_0_2_we0,
        weight_V_0_2_d0,
        weight_V_0_3_address0,
        weight_V_0_3_ce0,
        weight_V_0_3_we0,
        weight_V_0_3_d0,
        weight_V_0_4_address0,
        weight_V_0_4_ce0,
        weight_V_0_4_we0,
        weight_V_0_4_d0,
        weight_V_1_0_address0,
        weight_V_1_0_ce0,
        weight_V_1_0_we0,
        weight_V_1_0_d0,
        weight_V_1_1_address0,
        weight_V_1_1_ce0,
        weight_V_1_1_we0,
        weight_V_1_1_d0,
        weight_V_1_2_address0,
        weight_V_1_2_ce0,
        weight_V_1_2_we0,
        weight_V_1_2_d0,
        weight_V_1_3_address0,
        weight_V_1_3_ce0,
        weight_V_1_3_we0,
        weight_V_1_3_d0,
        weight_V_1_4_address0,
        weight_V_1_4_ce0,
        weight_V_1_4_we0,
        weight_V_1_4_d0,
        weight_V_2_0_address0,
        weight_V_2_0_ce0,
        weight_V_2_0_we0,
        weight_V_2_0_d0,
        weight_V_2_1_address0,
        weight_V_2_1_ce0,
        weight_V_2_1_we0,
        weight_V_2_1_d0,
        weight_V_2_2_address0,
        weight_V_2_2_ce0,
        weight_V_2_2_we0,
        weight_V_2_2_d0,
        weight_V_2_3_address0,
        weight_V_2_3_ce0,
        weight_V_2_3_we0,
        weight_V_2_3_d0,
        weight_V_2_4_address0,
        weight_V_2_4_ce0,
        weight_V_2_4_we0,
        weight_V_2_4_d0,
        weight_V_3_0_address0,
        weight_V_3_0_ce0,
        weight_V_3_0_we0,
        weight_V_3_0_d0,
        weight_V_3_1_address0,
        weight_V_3_1_ce0,
        weight_V_3_1_we0,
        weight_V_3_1_d0,
        weight_V_3_2_address0,
        weight_V_3_2_ce0,
        weight_V_3_2_we0,
        weight_V_3_2_d0,
        weight_V_3_3_address0,
        weight_V_3_3_ce0,
        weight_V_3_3_we0,
        weight_V_3_3_d0,
        weight_V_3_4_address0,
        weight_V_3_4_ce0,
        weight_V_3_4_we0,
        weight_V_3_4_d0,
        weight_V_4_0_address0,
        weight_V_4_0_ce0,
        weight_V_4_0_we0,
        weight_V_4_0_d0,
        weight_V_4_1_address0,
        weight_V_4_1_ce0,
        weight_V_4_1_we0,
        weight_V_4_1_d0,
        weight_V_4_2_address0,
        weight_V_4_2_ce0,
        weight_V_4_2_we0,
        weight_V_4_2_d0,
        weight_V_4_3_address0,
        weight_V_4_3_ce0,
        weight_V_4_3_we0,
        weight_V_4_3_d0,
        weight_V_4_4_address0,
        weight_V_4_4_ce0,
        weight_V_4_4_we0,
        weight_V_4_4_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [20:0] tmp;
input  [511:0] data_V;
output  [15:0] weight_V_0_0_address0;
output   weight_V_0_0_ce0;
output   weight_V_0_0_we0;
output  [7:0] weight_V_0_0_d0;
output  [15:0] weight_V_0_1_address0;
output   weight_V_0_1_ce0;
output   weight_V_0_1_we0;
output  [7:0] weight_V_0_1_d0;
output  [15:0] weight_V_0_2_address0;
output   weight_V_0_2_ce0;
output   weight_V_0_2_we0;
output  [7:0] weight_V_0_2_d0;
output  [15:0] weight_V_0_3_address0;
output   weight_V_0_3_ce0;
output   weight_V_0_3_we0;
output  [7:0] weight_V_0_3_d0;
output  [15:0] weight_V_0_4_address0;
output   weight_V_0_4_ce0;
output   weight_V_0_4_we0;
output  [7:0] weight_V_0_4_d0;
output  [15:0] weight_V_1_0_address0;
output   weight_V_1_0_ce0;
output   weight_V_1_0_we0;
output  [7:0] weight_V_1_0_d0;
output  [15:0] weight_V_1_1_address0;
output   weight_V_1_1_ce0;
output   weight_V_1_1_we0;
output  [7:0] weight_V_1_1_d0;
output  [15:0] weight_V_1_2_address0;
output   weight_V_1_2_ce0;
output   weight_V_1_2_we0;
output  [7:0] weight_V_1_2_d0;
output  [15:0] weight_V_1_3_address0;
output   weight_V_1_3_ce0;
output   weight_V_1_3_we0;
output  [7:0] weight_V_1_3_d0;
output  [15:0] weight_V_1_4_address0;
output   weight_V_1_4_ce0;
output   weight_V_1_4_we0;
output  [7:0] weight_V_1_4_d0;
output  [15:0] weight_V_2_0_address0;
output   weight_V_2_0_ce0;
output   weight_V_2_0_we0;
output  [7:0] weight_V_2_0_d0;
output  [15:0] weight_V_2_1_address0;
output   weight_V_2_1_ce0;
output   weight_V_2_1_we0;
output  [7:0] weight_V_2_1_d0;
output  [15:0] weight_V_2_2_address0;
output   weight_V_2_2_ce0;
output   weight_V_2_2_we0;
output  [7:0] weight_V_2_2_d0;
output  [15:0] weight_V_2_3_address0;
output   weight_V_2_3_ce0;
output   weight_V_2_3_we0;
output  [7:0] weight_V_2_3_d0;
output  [15:0] weight_V_2_4_address0;
output   weight_V_2_4_ce0;
output   weight_V_2_4_we0;
output  [7:0] weight_V_2_4_d0;
output  [15:0] weight_V_3_0_address0;
output   weight_V_3_0_ce0;
output   weight_V_3_0_we0;
output  [7:0] weight_V_3_0_d0;
output  [15:0] weight_V_3_1_address0;
output   weight_V_3_1_ce0;
output   weight_V_3_1_we0;
output  [7:0] weight_V_3_1_d0;
output  [15:0] weight_V_3_2_address0;
output   weight_V_3_2_ce0;
output   weight_V_3_2_we0;
output  [7:0] weight_V_3_2_d0;
output  [15:0] weight_V_3_3_address0;
output   weight_V_3_3_ce0;
output   weight_V_3_3_we0;
output  [7:0] weight_V_3_3_d0;
output  [15:0] weight_V_3_4_address0;
output   weight_V_3_4_ce0;
output   weight_V_3_4_we0;
output  [7:0] weight_V_3_4_d0;
output  [15:0] weight_V_4_0_address0;
output   weight_V_4_0_ce0;
output   weight_V_4_0_we0;
output  [7:0] weight_V_4_0_d0;
output  [15:0] weight_V_4_1_address0;
output   weight_V_4_1_ce0;
output   weight_V_4_1_we0;
output  [7:0] weight_V_4_1_d0;
output  [15:0] weight_V_4_2_address0;
output   weight_V_4_2_ce0;
output   weight_V_4_2_we0;
output  [7:0] weight_V_4_2_d0;
output  [15:0] weight_V_4_3_address0;
output   weight_V_4_3_ce0;
output   weight_V_4_3_we0;
output  [7:0] weight_V_4_3_d0;
output  [15:0] weight_V_4_4_address0;
output   weight_V_4_4_ce0;
output   weight_V_4_4_we0;
output  [7:0] weight_V_4_4_d0;

reg ap_idle;
reg weight_V_0_0_ce0;
reg weight_V_0_0_we0;
reg weight_V_0_1_ce0;
reg weight_V_0_1_we0;
reg weight_V_0_2_ce0;
reg weight_V_0_2_we0;
reg weight_V_0_3_ce0;
reg weight_V_0_3_we0;
reg weight_V_0_4_ce0;
reg weight_V_0_4_we0;
reg weight_V_1_0_ce0;
reg weight_V_1_0_we0;
reg weight_V_1_1_ce0;
reg weight_V_1_1_we0;
reg weight_V_1_2_ce0;
reg weight_V_1_2_we0;
reg weight_V_1_3_ce0;
reg weight_V_1_3_we0;
reg weight_V_1_4_ce0;
reg weight_V_1_4_we0;
reg weight_V_2_0_ce0;
reg weight_V_2_0_we0;
reg weight_V_2_1_ce0;
reg weight_V_2_1_we0;
reg weight_V_2_2_ce0;
reg weight_V_2_2_we0;
reg weight_V_2_3_ce0;
reg weight_V_2_3_we0;
reg weight_V_2_4_ce0;
reg weight_V_2_4_we0;
reg weight_V_3_0_ce0;
reg weight_V_3_0_we0;
reg weight_V_3_1_ce0;
reg weight_V_3_1_we0;
reg weight_V_3_2_ce0;
reg weight_V_3_2_we0;
reg weight_V_3_3_ce0;
reg weight_V_3_3_we0;
reg weight_V_3_4_ce0;
reg weight_V_3_4_we0;
reg weight_V_4_0_ce0;
reg weight_V_4_0_we0;
reg weight_V_4_1_ce0;
reg weight_V_4_1_we0;
reg weight_V_4_2_ce0;
reg weight_V_4_2_we0;
reg weight_V_4_3_ce0;
reg weight_V_4_3_we0;
reg weight_V_4_4_ce0;
reg weight_V_4_4_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln125_fu_461_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [20:0] real_index_fu_477_p2;
reg   [20:0] real_index_reg_607;
wire   [7:0] temp_V_fu_511_p1;
reg   [7:0] temp_V_reg_613;
reg   [7:0] temp_V_reg_613_pp0_iter1_reg;
reg   [7:0] temp_V_reg_613_pp0_iter2_reg;
reg   [7:0] temp_V_reg_613_pp0_iter3_reg;
reg   [7:0] temp_V_reg_613_pp0_iter4_reg;
reg   [7:0] temp_V_reg_613_pp0_iter5_reg;
reg   [7:0] temp_V_reg_613_pp0_iter6_reg;
reg   [7:0] temp_V_reg_613_pp0_iter7_reg;
reg   [7:0] temp_V_reg_613_pp0_iter8_reg;
reg   [7:0] temp_V_reg_613_pp0_iter9_reg;
reg   [7:0] temp_V_reg_613_pp0_iter10_reg;
reg   [7:0] temp_V_reg_613_pp0_iter11_reg;
reg   [7:0] temp_V_reg_613_pp0_iter12_reg;
reg   [7:0] temp_V_reg_613_pp0_iter13_reg;
reg   [7:0] temp_V_reg_613_pp0_iter14_reg;
reg   [7:0] temp_V_reg_613_pp0_iter15_reg;
reg   [7:0] temp_V_reg_613_pp0_iter16_reg;
reg   [7:0] temp_V_reg_613_pp0_iter17_reg;
reg   [7:0] temp_V_reg_613_pp0_iter18_reg;
reg   [7:0] temp_V_reg_613_pp0_iter19_reg;
reg   [7:0] temp_V_reg_613_pp0_iter20_reg;
reg   [7:0] temp_V_reg_613_pp0_iter21_reg;
reg   [7:0] temp_V_reg_613_pp0_iter22_reg;
reg   [7:0] temp_V_reg_613_pp0_iter23_reg;
reg   [18:0] trunc_ln2_reg_642;
reg   [16:0] tmp_26_reg_647;
reg   [16:0] tmp_26_reg_647_pp0_iter2_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter3_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter4_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter5_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter6_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter7_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter8_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter9_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter10_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter11_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter12_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter13_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter14_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter15_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter16_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter17_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter18_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter19_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter20_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter21_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter22_reg;
reg   [16:0] tmp_26_reg_647_pp0_iter23_reg;
wire   [63:0] zext_ln134_fu_560_p1;
wire    ap_block_pp0_stage0;
reg   [6:0] item_fu_112;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_item_3;
wire   [6:0] item_4_fu_467_p2;
wire   [2:0] trunc_ln134_fu_588_p1;
wire   [2:0] trunc_ln134_1_fu_592_p1;
wire   [20:0] zext_ln125_fu_473_p1;
wire   [20:0] grp_fu_483_p0;
wire   [3:0] grp_fu_483_p1;
wire   [5:0] trunc_ln133_fu_489_p1;
wire   [8:0] op2_assign_fu_493_p3;
wire   [511:0] zext_ln1676_fu_501_p1;
wire   [511:0] r_fu_505_p2;
wire   [20:0] mul183_fu_523_p0;
wire   [42:0] real_index_cast_fu_520_p1;
wire   [22:0] mul183_fu_523_p1;
wire   [42:0] mul183_fu_523_p2;
wire   [20:0] mul_ln129_fu_539_p0;
wire   [22:0] mul_ln129_fu_539_p1;
wire   [42:0] mul_ln129_fu_539_p2;
wire   [3:0] grp_fu_555_p1;
wire   [2:0] grp_fu_555_p2;
wire   [2:0] grp_fu_483_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_done_reg = 1'b0;
end

CnnKernel_urem_21ns_4ns_3_25_1 #(
    .ID( 1 ),
    .NUM_STAGE( 25 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_21ns_4ns_3_25_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_483_p0),
    .din1(grp_fu_483_p1),
    .ce(1'b1),
    .dout(grp_fu_483_p2)
);

CnnKernel_mul_21ns_23ns_43_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 23 ),
    .dout_WIDTH( 43 ))
mul_21ns_23ns_43_1_1_U2(
    .din0(mul183_fu_523_p0),
    .din1(mul183_fu_523_p1),
    .dout(mul183_fu_523_p2)
);

CnnKernel_mul_21ns_23ns_43_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 23 ),
    .dout_WIDTH( 43 ))
mul_21ns_23ns_43_1_1_U3(
    .din0(mul_ln129_fu_539_p0),
    .din1(mul_ln129_fu_539_p1),
    .dout(mul_ln129_fu_539_p2)
);

CnnKernel_urem_19ns_4ns_3_23_1 #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_19ns_4ns_3_23_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln2_reg_642),
    .din1(grp_fu_555_p1),
    .ce(1'b1),
    .dout(grp_fu_555_p2)
);

CnnKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter23_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln125_fu_461_p2 == 1'd0))) begin
            item_fu_112 <= item_4_fu_467_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            item_fu_112 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        temp_V_reg_613_pp0_iter10_reg <= temp_V_reg_613_pp0_iter9_reg;
        temp_V_reg_613_pp0_iter11_reg <= temp_V_reg_613_pp0_iter10_reg;
        temp_V_reg_613_pp0_iter12_reg <= temp_V_reg_613_pp0_iter11_reg;
        temp_V_reg_613_pp0_iter13_reg <= temp_V_reg_613_pp0_iter12_reg;
        temp_V_reg_613_pp0_iter14_reg <= temp_V_reg_613_pp0_iter13_reg;
        temp_V_reg_613_pp0_iter15_reg <= temp_V_reg_613_pp0_iter14_reg;
        temp_V_reg_613_pp0_iter16_reg <= temp_V_reg_613_pp0_iter15_reg;
        temp_V_reg_613_pp0_iter17_reg <= temp_V_reg_613_pp0_iter16_reg;
        temp_V_reg_613_pp0_iter18_reg <= temp_V_reg_613_pp0_iter17_reg;
        temp_V_reg_613_pp0_iter19_reg <= temp_V_reg_613_pp0_iter18_reg;
        temp_V_reg_613_pp0_iter20_reg <= temp_V_reg_613_pp0_iter19_reg;
        temp_V_reg_613_pp0_iter21_reg <= temp_V_reg_613_pp0_iter20_reg;
        temp_V_reg_613_pp0_iter22_reg <= temp_V_reg_613_pp0_iter21_reg;
        temp_V_reg_613_pp0_iter23_reg <= temp_V_reg_613_pp0_iter22_reg;
        temp_V_reg_613_pp0_iter2_reg <= temp_V_reg_613_pp0_iter1_reg;
        temp_V_reg_613_pp0_iter3_reg <= temp_V_reg_613_pp0_iter2_reg;
        temp_V_reg_613_pp0_iter4_reg <= temp_V_reg_613_pp0_iter3_reg;
        temp_V_reg_613_pp0_iter5_reg <= temp_V_reg_613_pp0_iter4_reg;
        temp_V_reg_613_pp0_iter6_reg <= temp_V_reg_613_pp0_iter5_reg;
        temp_V_reg_613_pp0_iter7_reg <= temp_V_reg_613_pp0_iter6_reg;
        temp_V_reg_613_pp0_iter8_reg <= temp_V_reg_613_pp0_iter7_reg;
        temp_V_reg_613_pp0_iter9_reg <= temp_V_reg_613_pp0_iter8_reg;
        tmp_26_reg_647_pp0_iter10_reg <= tmp_26_reg_647_pp0_iter9_reg;
        tmp_26_reg_647_pp0_iter11_reg <= tmp_26_reg_647_pp0_iter10_reg;
        tmp_26_reg_647_pp0_iter12_reg <= tmp_26_reg_647_pp0_iter11_reg;
        tmp_26_reg_647_pp0_iter13_reg <= tmp_26_reg_647_pp0_iter12_reg;
        tmp_26_reg_647_pp0_iter14_reg <= tmp_26_reg_647_pp0_iter13_reg;
        tmp_26_reg_647_pp0_iter15_reg <= tmp_26_reg_647_pp0_iter14_reg;
        tmp_26_reg_647_pp0_iter16_reg <= tmp_26_reg_647_pp0_iter15_reg;
        tmp_26_reg_647_pp0_iter17_reg <= tmp_26_reg_647_pp0_iter16_reg;
        tmp_26_reg_647_pp0_iter18_reg <= tmp_26_reg_647_pp0_iter17_reg;
        tmp_26_reg_647_pp0_iter19_reg <= tmp_26_reg_647_pp0_iter18_reg;
        tmp_26_reg_647_pp0_iter20_reg <= tmp_26_reg_647_pp0_iter19_reg;
        tmp_26_reg_647_pp0_iter21_reg <= tmp_26_reg_647_pp0_iter20_reg;
        tmp_26_reg_647_pp0_iter22_reg <= tmp_26_reg_647_pp0_iter21_reg;
        tmp_26_reg_647_pp0_iter23_reg <= tmp_26_reg_647_pp0_iter22_reg;
        tmp_26_reg_647_pp0_iter2_reg <= tmp_26_reg_647;
        tmp_26_reg_647_pp0_iter3_reg <= tmp_26_reg_647_pp0_iter2_reg;
        tmp_26_reg_647_pp0_iter4_reg <= tmp_26_reg_647_pp0_iter3_reg;
        tmp_26_reg_647_pp0_iter5_reg <= tmp_26_reg_647_pp0_iter4_reg;
        tmp_26_reg_647_pp0_iter6_reg <= tmp_26_reg_647_pp0_iter5_reg;
        tmp_26_reg_647_pp0_iter7_reg <= tmp_26_reg_647_pp0_iter6_reg;
        tmp_26_reg_647_pp0_iter8_reg <= tmp_26_reg_647_pp0_iter7_reg;
        tmp_26_reg_647_pp0_iter9_reg <= tmp_26_reg_647_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        temp_V_reg_613_pp0_iter1_reg <= temp_V_reg_613;
        tmp_26_reg_647 <= {{mul_ln129_fu_539_p2[42:26]}};
        trunc_ln2_reg_642 <= {{mul183_fu_523_p2[42:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln125_fu_461_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        real_index_reg_607 <= real_index_fu_477_p2;
        temp_V_reg_613 <= temp_V_fu_511_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln125_fu_461_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter23_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_item_3 = 7'd0;
    end else begin
        ap_sig_allocacmp_item_3 = item_fu_112;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_0_ce0 = 1'b1;
    end else begin
        weight_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd0) & (trunc_ln134_fu_588_p1 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_0_we0 = 1'b1;
    end else begin
        weight_V_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_1_ce0 = 1'b1;
    end else begin
        weight_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd1) & (trunc_ln134_fu_588_p1 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_1_we0 = 1'b1;
    end else begin
        weight_V_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_2_ce0 = 1'b1;
    end else begin
        weight_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd2) & (trunc_ln134_fu_588_p1 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_2_we0 = 1'b1;
    end else begin
        weight_V_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_3_ce0 = 1'b1;
    end else begin
        weight_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd3) & (trunc_ln134_fu_588_p1 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_3_we0 = 1'b1;
    end else begin
        weight_V_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_4_ce0 = 1'b1;
    end else begin
        weight_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln134_1_fu_592_p1 == 3'd0) & ~(trunc_ln134_1_fu_592_p1 == 3'd1) & ~(trunc_ln134_1_fu_592_p1 == 3'd2) & ~(trunc_ln134_1_fu_592_p1 == 3'd3) & (ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_fu_588_p1 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_0_4_we0 = 1'b1;
    end else begin
        weight_V_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_0_ce0 = 1'b1;
    end else begin
        weight_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd0) & (trunc_ln134_fu_588_p1 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_0_we0 = 1'b1;
    end else begin
        weight_V_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_1_ce0 = 1'b1;
    end else begin
        weight_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd1) & (trunc_ln134_fu_588_p1 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_1_we0 = 1'b1;
    end else begin
        weight_V_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_2_ce0 = 1'b1;
    end else begin
        weight_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd2) & (trunc_ln134_fu_588_p1 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_2_we0 = 1'b1;
    end else begin
        weight_V_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_3_ce0 = 1'b1;
    end else begin
        weight_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd3) & (trunc_ln134_fu_588_p1 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_3_we0 = 1'b1;
    end else begin
        weight_V_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_4_ce0 = 1'b1;
    end else begin
        weight_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln134_1_fu_592_p1 == 3'd0) & ~(trunc_ln134_1_fu_592_p1 == 3'd1) & ~(trunc_ln134_1_fu_592_p1 == 3'd2) & ~(trunc_ln134_1_fu_592_p1 == 3'd3) & (ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_fu_588_p1 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_1_4_we0 = 1'b1;
    end else begin
        weight_V_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_0_ce0 = 1'b1;
    end else begin
        weight_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd0) & (trunc_ln134_fu_588_p1 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_0_we0 = 1'b1;
    end else begin
        weight_V_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_1_ce0 = 1'b1;
    end else begin
        weight_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd1) & (trunc_ln134_fu_588_p1 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_1_we0 = 1'b1;
    end else begin
        weight_V_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_2_ce0 = 1'b1;
    end else begin
        weight_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd2) & (trunc_ln134_fu_588_p1 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_2_we0 = 1'b1;
    end else begin
        weight_V_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_3_ce0 = 1'b1;
    end else begin
        weight_V_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd3) & (trunc_ln134_fu_588_p1 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_3_we0 = 1'b1;
    end else begin
        weight_V_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_4_ce0 = 1'b1;
    end else begin
        weight_V_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln134_1_fu_592_p1 == 3'd0) & ~(trunc_ln134_1_fu_592_p1 == 3'd1) & ~(trunc_ln134_1_fu_592_p1 == 3'd2) & ~(trunc_ln134_1_fu_592_p1 == 3'd3) & (ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_fu_588_p1 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_2_4_we0 = 1'b1;
    end else begin
        weight_V_2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_0_ce0 = 1'b1;
    end else begin
        weight_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd0) & (trunc_ln134_fu_588_p1 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_0_we0 = 1'b1;
    end else begin
        weight_V_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_1_ce0 = 1'b1;
    end else begin
        weight_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd1) & (trunc_ln134_fu_588_p1 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_1_we0 = 1'b1;
    end else begin
        weight_V_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_2_ce0 = 1'b1;
    end else begin
        weight_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd2) & (trunc_ln134_fu_588_p1 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_2_we0 = 1'b1;
    end else begin
        weight_V_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_3_ce0 = 1'b1;
    end else begin
        weight_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd3) & (trunc_ln134_fu_588_p1 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_3_we0 = 1'b1;
    end else begin
        weight_V_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_4_ce0 = 1'b1;
    end else begin
        weight_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln134_1_fu_592_p1 == 3'd0) & ~(trunc_ln134_1_fu_592_p1 == 3'd1) & ~(trunc_ln134_1_fu_592_p1 == 3'd2) & ~(trunc_ln134_1_fu_592_p1 == 3'd3) & (ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_fu_588_p1 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_3_4_we0 = 1'b1;
    end else begin
        weight_V_3_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_0_ce0 = 1'b1;
    end else begin
        weight_V_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln134_fu_588_p1 == 3'd0) & ~(trunc_ln134_fu_588_p1 == 3'd1) & ~(trunc_ln134_fu_588_p1 == 3'd2) & ~(trunc_ln134_fu_588_p1 == 3'd3) & (ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_0_we0 = 1'b1;
    end else begin
        weight_V_4_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_1_ce0 = 1'b1;
    end else begin
        weight_V_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln134_fu_588_p1 == 3'd0) & ~(trunc_ln134_fu_588_p1 == 3'd1) & ~(trunc_ln134_fu_588_p1 == 3'd2) & ~(trunc_ln134_fu_588_p1 == 3'd3) & (ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_1_we0 = 1'b1;
    end else begin
        weight_V_4_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_2_ce0 = 1'b1;
    end else begin
        weight_V_4_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln134_fu_588_p1 == 3'd0) & ~(trunc_ln134_fu_588_p1 == 3'd1) & ~(trunc_ln134_fu_588_p1 == 3'd2) & ~(trunc_ln134_fu_588_p1 == 3'd3) & (ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_2_we0 = 1'b1;
    end else begin
        weight_V_4_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_3_ce0 = 1'b1;
    end else begin
        weight_V_4_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln134_fu_588_p1 == 3'd0) & ~(trunc_ln134_fu_588_p1 == 3'd1) & ~(trunc_ln134_fu_588_p1 == 3'd2) & ~(trunc_ln134_fu_588_p1 == 3'd3) & (ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln134_1_fu_592_p1 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_3_we0 = 1'b1;
    end else begin
        weight_V_4_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_4_ce0 = 1'b1;
    end else begin
        weight_V_4_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln134_fu_588_p1 == 3'd0) & ~(trunc_ln134_fu_588_p1 == 3'd1) & ~(trunc_ln134_fu_588_p1 == 3'd2) & ~(trunc_ln134_1_fu_592_p1 == 3'd0) & ~(trunc_ln134_1_fu_592_p1 == 3'd1) & ~(trunc_ln134_1_fu_592_p1 == 3'd2) & ~(trunc_ln134_1_fu_592_p1 == 3'd3) & ~(trunc_ln134_fu_588_p1 == 3'd3) & (ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_V_4_4_we0 = 1'b1;
    end else begin
        weight_V_4_4_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_483_p0 = (zext_ln125_fu_473_p1 + tmp);

assign grp_fu_483_p1 = 21'd5;

assign grp_fu_555_p1 = 19'd5;

assign icmp_ln125_fu_461_p2 = ((ap_sig_allocacmp_item_3 == 7'd64) ? 1'b1 : 1'b0);

assign item_4_fu_467_p2 = (ap_sig_allocacmp_item_3 + 7'd1);

assign mul183_fu_523_p0 = real_index_cast_fu_520_p1;

assign mul183_fu_523_p1 = 43'd3355444;

assign mul_ln129_fu_539_p0 = real_index_cast_fu_520_p1;

assign mul_ln129_fu_539_p1 = 43'd2684355;

assign op2_assign_fu_493_p3 = {{trunc_ln133_fu_489_p1}, {3'd0}};

assign r_fu_505_p2 = data_V >> zext_ln1676_fu_501_p1;

assign real_index_cast_fu_520_p1 = real_index_reg_607;

assign real_index_fu_477_p2 = (zext_ln125_fu_473_p1 + tmp);

assign temp_V_fu_511_p1 = r_fu_505_p2[7:0];

assign trunc_ln133_fu_489_p1 = ap_sig_allocacmp_item_3[5:0];

assign trunc_ln134_1_fu_592_p1 = grp_fu_483_p2[2:0];

assign trunc_ln134_fu_588_p1 = grp_fu_555_p2[2:0];

assign weight_V_0_0_address0 = zext_ln134_fu_560_p1;

assign weight_V_0_0_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_0_1_address0 = zext_ln134_fu_560_p1;

assign weight_V_0_1_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_0_2_address0 = zext_ln134_fu_560_p1;

assign weight_V_0_2_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_0_3_address0 = zext_ln134_fu_560_p1;

assign weight_V_0_3_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_0_4_address0 = zext_ln134_fu_560_p1;

assign weight_V_0_4_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_1_0_address0 = zext_ln134_fu_560_p1;

assign weight_V_1_0_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_1_1_address0 = zext_ln134_fu_560_p1;

assign weight_V_1_1_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_1_2_address0 = zext_ln134_fu_560_p1;

assign weight_V_1_2_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_1_3_address0 = zext_ln134_fu_560_p1;

assign weight_V_1_3_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_1_4_address0 = zext_ln134_fu_560_p1;

assign weight_V_1_4_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_2_0_address0 = zext_ln134_fu_560_p1;

assign weight_V_2_0_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_2_1_address0 = zext_ln134_fu_560_p1;

assign weight_V_2_1_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_2_2_address0 = zext_ln134_fu_560_p1;

assign weight_V_2_2_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_2_3_address0 = zext_ln134_fu_560_p1;

assign weight_V_2_3_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_2_4_address0 = zext_ln134_fu_560_p1;

assign weight_V_2_4_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_3_0_address0 = zext_ln134_fu_560_p1;

assign weight_V_3_0_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_3_1_address0 = zext_ln134_fu_560_p1;

assign weight_V_3_1_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_3_2_address0 = zext_ln134_fu_560_p1;

assign weight_V_3_2_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_3_3_address0 = zext_ln134_fu_560_p1;

assign weight_V_3_3_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_3_4_address0 = zext_ln134_fu_560_p1;

assign weight_V_3_4_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_4_0_address0 = zext_ln134_fu_560_p1;

assign weight_V_4_0_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_4_1_address0 = zext_ln134_fu_560_p1;

assign weight_V_4_1_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_4_2_address0 = zext_ln134_fu_560_p1;

assign weight_V_4_2_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_4_3_address0 = zext_ln134_fu_560_p1;

assign weight_V_4_3_d0 = temp_V_reg_613_pp0_iter23_reg;

assign weight_V_4_4_address0 = zext_ln134_fu_560_p1;

assign weight_V_4_4_d0 = temp_V_reg_613_pp0_iter23_reg;

assign zext_ln125_fu_473_p1 = ap_sig_allocacmp_item_3;

assign zext_ln134_fu_560_p1 = tmp_26_reg_647_pp0_iter23_reg;

assign zext_ln1676_fu_501_p1 = op2_assign_fu_493_p3;

endmodule //CnnKernel_CnnKernel_YourCode_Pipeline_VITIS_LOOP_125_1
