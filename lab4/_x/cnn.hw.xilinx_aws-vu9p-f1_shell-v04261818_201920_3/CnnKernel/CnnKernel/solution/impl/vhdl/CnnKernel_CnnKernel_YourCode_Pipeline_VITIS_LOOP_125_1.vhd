-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CnnKernel_CnnKernel_YourCode_Pipeline_VITIS_LOOP_125_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tmp : IN STD_LOGIC_VECTOR (20 downto 0);
    data_V : IN STD_LOGIC_VECTOR (511 downto 0);
    weight_V_0_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_0_0_ce0 : OUT STD_LOGIC;
    weight_V_0_0_we0 : OUT STD_LOGIC;
    weight_V_0_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_0_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_0_1_ce0 : OUT STD_LOGIC;
    weight_V_0_1_we0 : OUT STD_LOGIC;
    weight_V_0_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_0_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_0_2_ce0 : OUT STD_LOGIC;
    weight_V_0_2_we0 : OUT STD_LOGIC;
    weight_V_0_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_0_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_0_3_ce0 : OUT STD_LOGIC;
    weight_V_0_3_we0 : OUT STD_LOGIC;
    weight_V_0_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_0_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_0_4_ce0 : OUT STD_LOGIC;
    weight_V_0_4_we0 : OUT STD_LOGIC;
    weight_V_0_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_1_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_1_0_ce0 : OUT STD_LOGIC;
    weight_V_1_0_we0 : OUT STD_LOGIC;
    weight_V_1_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_1_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_1_1_ce0 : OUT STD_LOGIC;
    weight_V_1_1_we0 : OUT STD_LOGIC;
    weight_V_1_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_1_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_1_2_ce0 : OUT STD_LOGIC;
    weight_V_1_2_we0 : OUT STD_LOGIC;
    weight_V_1_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_1_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_1_3_ce0 : OUT STD_LOGIC;
    weight_V_1_3_we0 : OUT STD_LOGIC;
    weight_V_1_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_1_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_1_4_ce0 : OUT STD_LOGIC;
    weight_V_1_4_we0 : OUT STD_LOGIC;
    weight_V_1_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_2_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_2_0_ce0 : OUT STD_LOGIC;
    weight_V_2_0_we0 : OUT STD_LOGIC;
    weight_V_2_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_2_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_2_1_ce0 : OUT STD_LOGIC;
    weight_V_2_1_we0 : OUT STD_LOGIC;
    weight_V_2_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_2_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_2_2_ce0 : OUT STD_LOGIC;
    weight_V_2_2_we0 : OUT STD_LOGIC;
    weight_V_2_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_2_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_2_3_ce0 : OUT STD_LOGIC;
    weight_V_2_3_we0 : OUT STD_LOGIC;
    weight_V_2_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_2_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_2_4_ce0 : OUT STD_LOGIC;
    weight_V_2_4_we0 : OUT STD_LOGIC;
    weight_V_2_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_3_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_3_0_ce0 : OUT STD_LOGIC;
    weight_V_3_0_we0 : OUT STD_LOGIC;
    weight_V_3_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_3_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_3_1_ce0 : OUT STD_LOGIC;
    weight_V_3_1_we0 : OUT STD_LOGIC;
    weight_V_3_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_3_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_3_2_ce0 : OUT STD_LOGIC;
    weight_V_3_2_we0 : OUT STD_LOGIC;
    weight_V_3_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_3_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_3_3_ce0 : OUT STD_LOGIC;
    weight_V_3_3_we0 : OUT STD_LOGIC;
    weight_V_3_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_3_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_3_4_ce0 : OUT STD_LOGIC;
    weight_V_3_4_we0 : OUT STD_LOGIC;
    weight_V_3_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_4_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_4_0_ce0 : OUT STD_LOGIC;
    weight_V_4_0_we0 : OUT STD_LOGIC;
    weight_V_4_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_4_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_4_1_ce0 : OUT STD_LOGIC;
    weight_V_4_1_we0 : OUT STD_LOGIC;
    weight_V_4_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_4_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_4_2_ce0 : OUT STD_LOGIC;
    weight_V_4_2_we0 : OUT STD_LOGIC;
    weight_V_4_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_4_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_4_3_ce0 : OUT STD_LOGIC;
    weight_V_4_3_we0 : OUT STD_LOGIC;
    weight_V_4_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weight_V_4_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_V_4_4_ce0 : OUT STD_LOGIC;
    weight_V_4_4_we0 : OUT STD_LOGIC;
    weight_V_4_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of CnnKernel_CnnKernel_YourCode_Pipeline_VITIS_LOOP_125_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv21_5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000101";
    constant ap_const_lv43_333334 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000001100110011001100110100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv43_28F5C3 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000001010001111010111000011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv19_5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln125_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal real_index_fu_477_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal real_index_reg_607 : STD_LOGIC_VECTOR (20 downto 0);
    signal temp_V_fu_511_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_reg_613_pp0_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2_reg_642 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_26_reg_647 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter5_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter6_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter7_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter8_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter9_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter10_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter11_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter12_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter13_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter14_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter15_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter16_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter17_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter18_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter19_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter20_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter21_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter22_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_reg_647_pp0_iter23_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln134_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal item_fu_112 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_item_3 : STD_LOGIC_VECTOR (6 downto 0);
    signal item_4_fu_467_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_fu_588_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln134_1_fu_592_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln125_fu_473_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_483_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_483_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln133_fu_489_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal op2_assign_fu_493_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1676_fu_501_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal r_fu_505_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal mul183_fu_523_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal real_index_cast_fu_520_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal mul183_fu_523_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul183_fu_523_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal mul_ln129_fu_539_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln129_fu_539_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln129_fu_539_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_555_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_555_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_483_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter21_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter22_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter23_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component CnnKernel_urem_21ns_4ns_3_25_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component CnnKernel_mul_21ns_23ns_43_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component CnnKernel_urem_19ns_4ns_3_23_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component CnnKernel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    urem_21ns_4ns_3_25_1_U1 : component CnnKernel_urem_21ns_4ns_3_25_1
    generic map (
        ID => 1,
        NUM_STAGE => 25,
        din0_WIDTH => 21,
        din1_WIDTH => 4,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_483_p0,
        din1 => grp_fu_483_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_483_p2);

    mul_21ns_23ns_43_1_1_U2 : component CnnKernel_mul_21ns_23ns_43_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 43)
    port map (
        din0 => mul183_fu_523_p0,
        din1 => mul183_fu_523_p1,
        dout => mul183_fu_523_p2);

    mul_21ns_23ns_43_1_1_U3 : component CnnKernel_mul_21ns_23ns_43_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 43)
    port map (
        din0 => mul_ln129_fu_539_p0,
        din1 => mul_ln129_fu_539_p1,
        dout => mul_ln129_fu_539_p2);

    urem_19ns_4ns_3_23_1_U4 : component CnnKernel_urem_19ns_4ns_3_23_1
    generic map (
        ID => 1,
        NUM_STAGE => 23,
        din0_WIDTH => 19,
        din1_WIDTH => 4,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln2_reg_642,
        din1 => grp_fu_555_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_555_p2);

    flow_control_loop_pipe_sequential_init_U : component CnnKernel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter23_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    item_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln125_fu_461_p2 = ap_const_lv1_0))) then 
                    item_fu_112 <= item_4_fu_467_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    item_fu_112 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
                ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
                ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
                ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                temp_V_reg_613_pp0_iter10_reg <= temp_V_reg_613_pp0_iter9_reg;
                temp_V_reg_613_pp0_iter11_reg <= temp_V_reg_613_pp0_iter10_reg;
                temp_V_reg_613_pp0_iter12_reg <= temp_V_reg_613_pp0_iter11_reg;
                temp_V_reg_613_pp0_iter13_reg <= temp_V_reg_613_pp0_iter12_reg;
                temp_V_reg_613_pp0_iter14_reg <= temp_V_reg_613_pp0_iter13_reg;
                temp_V_reg_613_pp0_iter15_reg <= temp_V_reg_613_pp0_iter14_reg;
                temp_V_reg_613_pp0_iter16_reg <= temp_V_reg_613_pp0_iter15_reg;
                temp_V_reg_613_pp0_iter17_reg <= temp_V_reg_613_pp0_iter16_reg;
                temp_V_reg_613_pp0_iter18_reg <= temp_V_reg_613_pp0_iter17_reg;
                temp_V_reg_613_pp0_iter19_reg <= temp_V_reg_613_pp0_iter18_reg;
                temp_V_reg_613_pp0_iter20_reg <= temp_V_reg_613_pp0_iter19_reg;
                temp_V_reg_613_pp0_iter21_reg <= temp_V_reg_613_pp0_iter20_reg;
                temp_V_reg_613_pp0_iter22_reg <= temp_V_reg_613_pp0_iter21_reg;
                temp_V_reg_613_pp0_iter23_reg <= temp_V_reg_613_pp0_iter22_reg;
                temp_V_reg_613_pp0_iter2_reg <= temp_V_reg_613_pp0_iter1_reg;
                temp_V_reg_613_pp0_iter3_reg <= temp_V_reg_613_pp0_iter2_reg;
                temp_V_reg_613_pp0_iter4_reg <= temp_V_reg_613_pp0_iter3_reg;
                temp_V_reg_613_pp0_iter5_reg <= temp_V_reg_613_pp0_iter4_reg;
                temp_V_reg_613_pp0_iter6_reg <= temp_V_reg_613_pp0_iter5_reg;
                temp_V_reg_613_pp0_iter7_reg <= temp_V_reg_613_pp0_iter6_reg;
                temp_V_reg_613_pp0_iter8_reg <= temp_V_reg_613_pp0_iter7_reg;
                temp_V_reg_613_pp0_iter9_reg <= temp_V_reg_613_pp0_iter8_reg;
                tmp_26_reg_647_pp0_iter10_reg <= tmp_26_reg_647_pp0_iter9_reg;
                tmp_26_reg_647_pp0_iter11_reg <= tmp_26_reg_647_pp0_iter10_reg;
                tmp_26_reg_647_pp0_iter12_reg <= tmp_26_reg_647_pp0_iter11_reg;
                tmp_26_reg_647_pp0_iter13_reg <= tmp_26_reg_647_pp0_iter12_reg;
                tmp_26_reg_647_pp0_iter14_reg <= tmp_26_reg_647_pp0_iter13_reg;
                tmp_26_reg_647_pp0_iter15_reg <= tmp_26_reg_647_pp0_iter14_reg;
                tmp_26_reg_647_pp0_iter16_reg <= tmp_26_reg_647_pp0_iter15_reg;
                tmp_26_reg_647_pp0_iter17_reg <= tmp_26_reg_647_pp0_iter16_reg;
                tmp_26_reg_647_pp0_iter18_reg <= tmp_26_reg_647_pp0_iter17_reg;
                tmp_26_reg_647_pp0_iter19_reg <= tmp_26_reg_647_pp0_iter18_reg;
                tmp_26_reg_647_pp0_iter20_reg <= tmp_26_reg_647_pp0_iter19_reg;
                tmp_26_reg_647_pp0_iter21_reg <= tmp_26_reg_647_pp0_iter20_reg;
                tmp_26_reg_647_pp0_iter22_reg <= tmp_26_reg_647_pp0_iter21_reg;
                tmp_26_reg_647_pp0_iter23_reg <= tmp_26_reg_647_pp0_iter22_reg;
                tmp_26_reg_647_pp0_iter2_reg <= tmp_26_reg_647;
                tmp_26_reg_647_pp0_iter3_reg <= tmp_26_reg_647_pp0_iter2_reg;
                tmp_26_reg_647_pp0_iter4_reg <= tmp_26_reg_647_pp0_iter3_reg;
                tmp_26_reg_647_pp0_iter5_reg <= tmp_26_reg_647_pp0_iter4_reg;
                tmp_26_reg_647_pp0_iter6_reg <= tmp_26_reg_647_pp0_iter5_reg;
                tmp_26_reg_647_pp0_iter7_reg <= tmp_26_reg_647_pp0_iter6_reg;
                tmp_26_reg_647_pp0_iter8_reg <= tmp_26_reg_647_pp0_iter7_reg;
                tmp_26_reg_647_pp0_iter9_reg <= tmp_26_reg_647_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                temp_V_reg_613_pp0_iter1_reg <= temp_V_reg_613;
                tmp_26_reg_647 <= mul_ln129_fu_539_p2(42 downto 26);
                trunc_ln2_reg_642 <= mul183_fu_523_p2(42 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln125_fu_461_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                real_index_reg_607 <= real_index_fu_477_p2;
                temp_V_reg_613 <= temp_V_fu_511_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln125_fu_461_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln125_fu_461_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter23_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter23_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_item_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, item_fu_112, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_item_3 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_item_3 <= item_fu_112;
        end if; 
    end process;

    grp_fu_483_p0 <= std_logic_vector(unsigned(zext_ln125_fu_473_p1) + unsigned(tmp));
    grp_fu_483_p1 <= ap_const_lv21_5(4 - 1 downto 0);
    grp_fu_555_p1 <= ap_const_lv19_5(4 - 1 downto 0);
    icmp_ln125_fu_461_p2 <= "1" when (ap_sig_allocacmp_item_3 = ap_const_lv7_40) else "0";
    item_4_fu_467_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_item_3) + unsigned(ap_const_lv7_1));
    mul183_fu_523_p0 <= real_index_cast_fu_520_p1(21 - 1 downto 0);
    mul183_fu_523_p1 <= ap_const_lv43_333334(23 - 1 downto 0);
    mul_ln129_fu_539_p0 <= real_index_cast_fu_520_p1(21 - 1 downto 0);
    mul_ln129_fu_539_p1 <= ap_const_lv43_28F5C3(23 - 1 downto 0);
    op2_assign_fu_493_p3 <= (trunc_ln133_fu_489_p1 & ap_const_lv3_0);
    r_fu_505_p2 <= std_logic_vector(shift_right(unsigned(data_V),to_integer(unsigned('0' & zext_ln1676_fu_501_p1(31-1 downto 0)))));
    real_index_cast_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(real_index_reg_607),43));
    real_index_fu_477_p2 <= std_logic_vector(unsigned(zext_ln125_fu_473_p1) + unsigned(tmp));
    temp_V_fu_511_p1 <= r_fu_505_p2(8 - 1 downto 0);
    trunc_ln133_fu_489_p1 <= ap_sig_allocacmp_item_3(6 - 1 downto 0);
    trunc_ln134_1_fu_592_p1 <= grp_fu_483_p2(3 - 1 downto 0);
    trunc_ln134_fu_588_p1 <= grp_fu_555_p2(3 - 1 downto 0);
    weight_V_0_0_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_0_0_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_0) and (trunc_ln134_fu_588_p1 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_0_we0 <= ap_const_logic_1;
        else 
            weight_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_0_1_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_0_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_1_ce0 <= ap_const_logic_1;
        else 
            weight_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_0_1_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_0_1_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_1) and (trunc_ln134_fu_588_p1 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_1_we0 <= ap_const_logic_1;
        else 
            weight_V_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_0_2_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_0_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_2_ce0 <= ap_const_logic_1;
        else 
            weight_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_0_2_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_0_2_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_2) and (trunc_ln134_fu_588_p1 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_2_we0 <= ap_const_logic_1;
        else 
            weight_V_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_0_3_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_0_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_3_ce0 <= ap_const_logic_1;
        else 
            weight_V_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_0_3_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_0_3_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_3) and (trunc_ln134_fu_588_p1 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_3_we0 <= ap_const_logic_1;
        else 
            weight_V_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_0_4_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_0_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_4_ce0 <= ap_const_logic_1;
        else 
            weight_V_0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_0_4_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_0_4_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if ((not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_0)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_1)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_2)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_3)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_fu_588_p1 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_0_4_we0 <= ap_const_logic_1;
        else 
            weight_V_0_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_0_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_0_ce0 <= ap_const_logic_1;
        else 
            weight_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_0_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_1_0_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_0) and (trunc_ln134_fu_588_p1 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_0_we0 <= ap_const_logic_1;
        else 
            weight_V_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_1_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_1_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_1_ce0 <= ap_const_logic_1;
        else 
            weight_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_1_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_1_1_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_1) and (trunc_ln134_fu_588_p1 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_1_we0 <= ap_const_logic_1;
        else 
            weight_V_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_2_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_1_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_2_ce0 <= ap_const_logic_1;
        else 
            weight_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_2_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_1_2_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_2) and (trunc_ln134_fu_588_p1 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_2_we0 <= ap_const_logic_1;
        else 
            weight_V_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_3_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_1_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_3_ce0 <= ap_const_logic_1;
        else 
            weight_V_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_3_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_1_3_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_3) and (trunc_ln134_fu_588_p1 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_3_we0 <= ap_const_logic_1;
        else 
            weight_V_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_4_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_1_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_4_ce0 <= ap_const_logic_1;
        else 
            weight_V_1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_1_4_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_1_4_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if ((not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_0)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_1)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_2)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_3)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_fu_588_p1 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_1_4_we0 <= ap_const_logic_1;
        else 
            weight_V_1_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_0_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_0_ce0 <= ap_const_logic_1;
        else 
            weight_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_0_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_2_0_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_0) and (trunc_ln134_fu_588_p1 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_0_we0 <= ap_const_logic_1;
        else 
            weight_V_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_1_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_2_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_1_ce0 <= ap_const_logic_1;
        else 
            weight_V_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_1_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_2_1_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_1) and (trunc_ln134_fu_588_p1 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_1_we0 <= ap_const_logic_1;
        else 
            weight_V_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_2_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_2_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_2_ce0 <= ap_const_logic_1;
        else 
            weight_V_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_2_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_2_2_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_2) and (trunc_ln134_fu_588_p1 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_2_we0 <= ap_const_logic_1;
        else 
            weight_V_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_3_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_2_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_3_ce0 <= ap_const_logic_1;
        else 
            weight_V_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_3_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_2_3_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_3) and (trunc_ln134_fu_588_p1 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_3_we0 <= ap_const_logic_1;
        else 
            weight_V_2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_4_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_2_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_4_ce0 <= ap_const_logic_1;
        else 
            weight_V_2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_2_4_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_2_4_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if ((not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_0)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_1)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_2)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_3)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_fu_588_p1 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_2_4_we0 <= ap_const_logic_1;
        else 
            weight_V_2_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_0_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_3_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_0_ce0 <= ap_const_logic_1;
        else 
            weight_V_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_0_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_3_0_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_0) and (trunc_ln134_fu_588_p1 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_0_we0 <= ap_const_logic_1;
        else 
            weight_V_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_1_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_3_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_1_ce0 <= ap_const_logic_1;
        else 
            weight_V_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_1_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_3_1_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_1) and (trunc_ln134_fu_588_p1 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_1_we0 <= ap_const_logic_1;
        else 
            weight_V_3_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_2_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_3_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_2_ce0 <= ap_const_logic_1;
        else 
            weight_V_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_2_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_3_2_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_2) and (trunc_ln134_fu_588_p1 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_2_we0 <= ap_const_logic_1;
        else 
            weight_V_3_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_3_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_3_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_3_ce0 <= ap_const_logic_1;
        else 
            weight_V_3_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_3_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_3_3_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_3) and (trunc_ln134_fu_588_p1 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_3_we0 <= ap_const_logic_1;
        else 
            weight_V_3_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_4_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_3_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_4_ce0 <= ap_const_logic_1;
        else 
            weight_V_3_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_3_4_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_3_4_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if ((not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_0)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_1)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_2)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_3)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_fu_588_p1 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_3_4_we0 <= ap_const_logic_1;
        else 
            weight_V_3_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_0_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_4_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_0_ce0 <= ap_const_logic_1;
        else 
            weight_V_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_0_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_4_0_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if ((not((trunc_ln134_fu_588_p1 = ap_const_lv3_0)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_1)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_2)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_3)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_0_we0 <= ap_const_logic_1;
        else 
            weight_V_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_1_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_4_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_1_ce0 <= ap_const_logic_1;
        else 
            weight_V_4_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_1_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_4_1_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if ((not((trunc_ln134_fu_588_p1 = ap_const_lv3_0)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_1)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_2)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_3)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_1_we0 <= ap_const_logic_1;
        else 
            weight_V_4_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_2_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_4_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_2_ce0 <= ap_const_logic_1;
        else 
            weight_V_4_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_2_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_4_2_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if ((not((trunc_ln134_fu_588_p1 = ap_const_lv3_0)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_1)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_2)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_3)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_2_we0 <= ap_const_logic_1;
        else 
            weight_V_4_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_3_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_4_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_3_ce0 <= ap_const_logic_1;
        else 
            weight_V_4_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_3_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_4_3_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if ((not((trunc_ln134_fu_588_p1 = ap_const_lv3_0)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_1)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_2)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_3)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln134_1_fu_592_p1 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_3_we0 <= ap_const_logic_1;
        else 
            weight_V_4_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_4_address0 <= zext_ln134_fu_560_p1(16 - 1 downto 0);

    weight_V_4_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_4_ce0 <= ap_const_logic_1;
        else 
            weight_V_4_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_V_4_4_d0 <= temp_V_reg_613_pp0_iter23_reg;

    weight_V_4_4_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, trunc_ln134_fu_588_p1, trunc_ln134_1_fu_592_p1)
    begin
        if ((not((trunc_ln134_fu_588_p1 = ap_const_lv3_0)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_1)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_2)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_0)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_1)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_2)) and not((trunc_ln134_1_fu_592_p1 = ap_const_lv3_3)) and not((trunc_ln134_fu_588_p1 = ap_const_lv3_3)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_V_4_4_we0 <= ap_const_logic_1;
        else 
            weight_V_4_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln125_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_item_3),21));
    zext_ln134_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_reg_647_pp0_iter23_reg),64));
    zext_ln1676_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op2_assign_fu_493_p3),512));
end behav;
