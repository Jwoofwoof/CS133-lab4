// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CnnKernel_CnnKernel_YourCode_Pipeline_maxpool_VITIS_LOOP_84_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_ln85,
        C_V_address0,
        C_V_ce0,
        C_V_q0,
        C_V_address1,
        C_V_ce1,
        C_V_q1,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] sub_ln85;
output  [13:0] C_V_address0;
output   C_V_ce0;
input  [16:0] C_V_q0;
output  [13:0] C_V_address1;
output   C_V_ce1;
input  [16:0] C_V_q1;
output  [19:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [7:0] output_V_d0;

reg ap_idle;
reg[13:0] C_V_address0;
reg C_V_ce0;
reg[13:0] C_V_address1;
reg C_V_ce1;
reg output_V_ce0;
reg output_V_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln83_reg_472;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire  signed [16:0] sub_ln85_cast_fu_172_p1;
reg  signed [16:0] sub_ln85_cast_reg_467;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln83_fu_194_p2;
wire   [5:0] select_ln83_fu_224_p3;
reg   [5:0] select_ln83_reg_476;
reg   [5:0] select_ln83_reg_476_pp0_iter1_reg;
wire   [5:0] select_ln83_1_fu_232_p3;
reg   [5:0] select_ln83_1_reg_482;
reg   [5:0] select_ln83_1_reg_482_pp0_iter1_reg;
wire    ap_block_pp0_stage1_11001;
wire   [13:0] add_ln87_fu_367_p2;
reg   [13:0] add_ln87_reg_500;
wire   [13:0] add_ln87_1_fu_373_p2;
reg   [13:0] add_ln87_1_reg_505;
wire   [16:0] grp_fu_154_p3;
reg   [16:0] select_ln32_reg_510;
reg   [7:0] tmp_6_reg_525;
wire   [0:0] icmp_ln1547_2_fu_387_p2;
reg   [0:0] icmp_ln1547_2_reg_530;
reg   [7:0] tmp_7_reg_535;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln86_3_fu_341_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln86_4_fu_352_p1;
wire   [63:0] zext_ln87_1_fu_379_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln87_2_fu_383_p1;
wire   [63:0] zext_ln85_2_fu_435_p1;
reg   [5:0] w_fu_76;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_w_load;
wire   [5:0] add_ln84_fu_240_p2;
reg   [5:0] h_fu_80;
reg   [5:0] ap_sig_allocacmp_h_load;
reg   [11:0] indvar_flatten167_fu_84;
reg   [11:0] ap_sig_allocacmp_indvar_flatten167_load;
wire   [11:0] add_ln83_1_fu_200_p2;
wire   [0:0] grp_fu_148_p2;
wire   [0:0] icmp_ln84_fu_218_p2;
wire   [5:0] add_ln83_fu_212_p2;
wire   [10:0] tmp_3_fu_275_p3;
wire   [13:0] tmp_s_fu_268_p3;
wire   [13:0] zext_ln86_fu_282_p1;
wire   [6:0] p_cast27_mid2_v_fu_261_p3;
wire   [6:0] or_ln83_fu_292_p2;
wire   [10:0] tmp_5_fu_306_p3;
wire   [13:0] tmp_4_fu_298_p3;
wire   [13:0] zext_ln86_1_fu_314_p1;
wire   [6:0] shl_ln6_fu_324_p3;
wire   [13:0] sub_ln86_fu_286_p2;
wire   [13:0] zext_ln86_2_fu_331_p1;
wire   [13:0] add_ln86_fu_335_p2;
wire   [13:0] sub_ln86_1_fu_318_p2;
wire   [13:0] add_ln86_1_fu_346_p2;
wire   [6:0] or_ln87_fu_357_p2;
wire   [13:0] zext_ln87_fu_363_p1;
wire   [16:0] zext_ln85_fu_392_p1;
wire   [16:0] add_ln85_fu_395_p2;
wire   [13:0] trunc_ln85_fu_400_p1;
wire   [19:0] p_shl30_cast_fu_404_p3;
wire   [19:0] p_shl31_cast_fu_412_p3;
wire   [19:0] sub_ln85_1_fu_420_p2;
wire   [19:0] zext_ln85_1_fu_426_p1;
wire   [19:0] add_ln85_1_fu_429_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

CnnKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln83_fu_194_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            h_fu_80 <= select_ln83_1_fu_232_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            h_fu_80 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln83_fu_194_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten167_fu_84 <= add_ln83_1_fu_200_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten167_fu_84 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln83_fu_194_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            w_fu_76 <= add_ln84_fu_240_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            w_fu_76 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_reg_472 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln87_1_reg_505[13 : 1] <= add_ln87_1_fu_373_p2[13 : 1];
        add_ln87_reg_500[13 : 1] <= add_ln87_fu_367_p2[13 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1547_2_reg_530 <= icmp_ln1547_2_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln83_reg_472 <= icmp_ln83_fu_194_p2;
        select_ln83_1_reg_482_pp0_iter1_reg <= select_ln83_1_reg_482;
        select_ln83_reg_476_pp0_iter1_reg <= select_ln83_reg_476;
        sub_ln85_cast_reg_467 <= sub_ln85_cast_fu_172_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln32_reg_510 <= grp_fu_154_p3;
        tmp_6_reg_525 <= {{grp_fu_154_p3[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_fu_194_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln83_1_reg_482 <= select_ln83_1_fu_232_p3;
        select_ln83_reg_476 <= select_ln83_fu_224_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_7_reg_535 <= {{grp_fu_154_p3[15:8]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_V_address0 = zext_ln87_2_fu_383_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_V_address0 = zext_ln86_4_fu_352_p1;
    end else begin
        C_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_V_address1 = zext_ln87_1_fu_379_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_V_address1 = zext_ln86_3_fu_341_p1;
    end else begin
        C_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        C_V_ce0 = 1'b1;
    end else begin
        C_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        C_V_ce1 = 1'b1;
    end else begin
        C_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln83_reg_472 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln83_reg_472 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_h_load = 6'd0;
    end else begin
        ap_sig_allocacmp_h_load = h_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten167_load = 12'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten167_load = indvar_flatten167_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_w_load = 6'd0;
    end else begin
        ap_sig_allocacmp_w_load = w_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln83_1_fu_200_p2 = (ap_sig_allocacmp_indvar_flatten167_load + 12'd1);

assign add_ln83_fu_212_p2 = (ap_sig_allocacmp_h_load + 6'd1);

assign add_ln84_fu_240_p2 = (select_ln83_fu_224_p3 + 6'd1);

assign add_ln85_1_fu_429_p2 = (sub_ln85_1_fu_420_p2 + zext_ln85_1_fu_426_p1);

assign add_ln85_fu_395_p2 = ($signed(sub_ln85_cast_reg_467) + $signed(zext_ln85_fu_392_p1));

assign add_ln86_1_fu_346_p2 = (sub_ln86_1_fu_318_p2 + zext_ln86_2_fu_331_p1);

assign add_ln86_fu_335_p2 = (sub_ln86_fu_286_p2 + zext_ln86_2_fu_331_p1);

assign add_ln87_1_fu_373_p2 = (sub_ln86_1_fu_318_p2 + zext_ln87_fu_363_p1);

assign add_ln87_fu_367_p2 = (sub_ln86_fu_286_p2 + zext_ln87_fu_363_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_fu_148_p2 = (($signed(C_V_q1) > $signed(C_V_q0)) ? 1'b1 : 1'b0);

assign grp_fu_154_p3 = ((grp_fu_148_p2[0:0] == 1'b1) ? C_V_q1 : C_V_q0);

assign icmp_ln1547_2_fu_387_p2 = (($signed(select_ln32_reg_510) > $signed(grp_fu_154_p3)) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_194_p2 = ((ap_sig_allocacmp_indvar_flatten167_load == 12'd3136) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_218_p2 = ((ap_sig_allocacmp_w_load == 6'd56) ? 1'b1 : 1'b0);

assign or_ln83_fu_292_p2 = (p_cast27_mid2_v_fu_261_p3 | 7'd1);

assign or_ln87_fu_357_p2 = (shl_ln6_fu_324_p3 | 7'd1);

assign output_V_address0 = zext_ln85_2_fu_435_p1;

assign output_V_d0 = ((icmp_ln1547_2_reg_530[0:0] == 1'b1) ? tmp_6_reg_525 : tmp_7_reg_535);

assign p_cast27_mid2_v_fu_261_p3 = {{select_ln83_1_reg_482}, {1'd0}};

assign p_shl30_cast_fu_404_p3 = {{trunc_ln85_fu_400_p1}, {6'd0}};

assign p_shl31_cast_fu_412_p3 = {{add_ln85_fu_395_p2}, {3'd0}};

assign select_ln83_1_fu_232_p3 = ((icmp_ln84_fu_218_p2[0:0] == 1'b1) ? add_ln83_fu_212_p2 : ap_sig_allocacmp_h_load);

assign select_ln83_fu_224_p3 = ((icmp_ln84_fu_218_p2[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_w_load);

assign shl_ln6_fu_324_p3 = {{select_ln83_reg_476}, {1'd0}};

assign sub_ln85_1_fu_420_p2 = (p_shl30_cast_fu_404_p3 - p_shl31_cast_fu_412_p3);

assign sub_ln85_cast_fu_172_p1 = $signed(sub_ln85);

assign sub_ln86_1_fu_318_p2 = (tmp_4_fu_298_p3 - zext_ln86_1_fu_314_p1);

assign sub_ln86_fu_286_p2 = (tmp_s_fu_268_p3 - zext_ln86_fu_282_p1);

assign tmp_3_fu_275_p3 = {{select_ln83_1_reg_482}, {5'd0}};

assign tmp_4_fu_298_p3 = {{or_ln83_fu_292_p2}, {7'd0}};

assign tmp_5_fu_306_p3 = {{or_ln83_fu_292_p2}, {4'd0}};

assign tmp_s_fu_268_p3 = {{select_ln83_1_reg_482}, {8'd0}};

assign trunc_ln85_fu_400_p1 = add_ln85_fu_395_p2[13:0];

assign zext_ln85_1_fu_426_p1 = select_ln83_reg_476_pp0_iter1_reg;

assign zext_ln85_2_fu_435_p1 = add_ln85_1_fu_429_p2;

assign zext_ln85_fu_392_p1 = select_ln83_1_reg_482_pp0_iter1_reg;

assign zext_ln86_1_fu_314_p1 = tmp_5_fu_306_p3;

assign zext_ln86_2_fu_331_p1 = shl_ln6_fu_324_p3;

assign zext_ln86_3_fu_341_p1 = add_ln86_fu_335_p2;

assign zext_ln86_4_fu_352_p1 = add_ln86_1_fu_346_p2;

assign zext_ln86_fu_282_p1 = tmp_3_fu_275_p3;

assign zext_ln87_1_fu_379_p1 = add_ln87_reg_500;

assign zext_ln87_2_fu_383_p1 = add_ln87_1_reg_505;

assign zext_ln87_fu_363_p1 = or_ln87_fu_357_p2;

always @ (posedge ap_clk) begin
    add_ln87_reg_500[0] <= 1'b1;
    add_ln87_1_reg_505[0] <= 1'b1;
end

endmodule //CnnKernel_CnnKernel_YourCode_Pipeline_maxpool_VITIS_LOOP_84_7
